"""remove division table, add department table

Revision ID: b7ab3a731021
Revises: bd3a6fc36231
Create Date: 2025-09-09 13:54:33.085870

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "b7ab3a731021"
down_revision: Union[str, Sequence[str], None] = "bd3a6fc36231"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "department",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.drop_constraint(op.f("project_division_id_fkey"), "project", type_="foreignkey")
    op.drop_constraint(
        op.f("supervisor_division_name_fkey"), "supervisor", type_="foreignkey"
    )
    op.drop_constraint(op.f("user_division_name_fkey"), "user", type_="foreignkey")
    op.drop_table("division")
    op.add_column("project", sa.Column("department_id", sa.Integer(), nullable=False))
    op.create_foreign_key(
        None,
        "project",
        "department",
        ["department_id"],
        ["id"],
        onupdate="CASCADE",
        ondelete="CASCADE",
    )
    op.drop_column("project", "division_id")
    op.add_column("supervisor", sa.Column("department_id", sa.Integer(), nullable=True))
    op.create_foreign_key(
        None,
        "supervisor",
        "department",
        ["department_id"],
        ["id"],
        onupdate="CASCADE",
        ondelete="SET NULL",
    )
    op.drop_column("supervisor", "division_name")
    op.add_column("user", sa.Column("department_id", sa.Integer(), nullable=True))
    op.create_foreign_key(
        None,
        "user",
        "department",
        ["department_id"],
        ["id"],
        onupdate="CASCADE",
        ondelete="SET NULL",
    )
    op.drop_column("user", "division_name")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "user",
        sa.Column(
            "division_name",
            sa.VARCHAR(),
            server_default=sa.text("'information_technology'::character varying"),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.drop_constraint(None, "user", type_="foreignkey")
    op.create_foreign_key(
        op.f("user_division_name_fkey"),
        "user",
        "division",
        ["division_name"],
        ["name"],
        onupdate="CASCADE",
        ondelete="SET NULL",
    )
    op.drop_column("user", "department_id")
    op.add_column(
        "supervisor",
        sa.Column("division_name", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.drop_constraint(None, "supervisor", type_="foreignkey")
    op.create_foreign_key(
        op.f("supervisor_division_name_fkey"),
        "supervisor",
        "division",
        ["division_name"],
        ["name"],
        onupdate="CASCADE",
        ondelete="SET NULL",
    )
    op.drop_column("supervisor", "department_id")
    op.add_column(
        "project",
        sa.Column("division_id", sa.UUID(), autoincrement=False, nullable=True),
    )
    op.drop_constraint(None, "project", type_="foreignkey")
    op.create_foreign_key(
        op.f("project_division_id_fkey"),
        "project",
        "division",
        ["division_id"],
        ["id"],
        onupdate="CASCADE",
        ondelete="CASCADE",
    )
    op.drop_column("project", "department_id")
    op.create_table(
        "division",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("division_pkey")),
        sa.UniqueConstraint(
            "name",
            name=op.f("division_name_key"),
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
    )
    op.drop_table("department")
    # ### end Alembic commands ###
