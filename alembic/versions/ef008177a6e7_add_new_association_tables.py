"""add new association tables

Revision ID: ef008177a6e7
Revises: d8c84a795eb7
Create Date: 2025-09-07 14:31:06.020152

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ef008177a6e7'
down_revision: Union[str, Sequence[str], None] = 'd8c84a795eb7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_skill',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('skill_id', sa.UUID(), nullable=False),
    sa.Column('note', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['skill_id'], ['skill.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'skill_id')
    )
    op.create_index('ix_user_skill_unique', 'user_skill', ['user_id', 'skill_id'], unique=True)
    op.create_table('project_intern',
    sa.Column('intern_id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['intern_id'], ['intern.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.PrimaryKeyConstraint('intern_id', 'project_id')
    )
    op.create_index('ix_project_intern_unique', 'project_intern', ['intern_id', 'project_id'], unique=True)
    op.create_table('project_skill',
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('skill_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.ForeignKeyConstraint(['skill_id'], ['skill.id'], ),
    sa.PrimaryKeyConstraint('project_id', 'skill_id')
    )
    op.create_index('ix_project_skill_unique', 'project_skill', ['project_id', 'skill_id'], unique=True)
    op.drop_index(op.f('ix_supervisor_skill_unique'), table_name='supervisor_skill')
    op.drop_table('supervisor_skill')
    op.drop_index(op.f('ix_intern_skill_unique'), table_name='intern_skill')
    op.drop_table('intern_skill')
    op.drop_index(op.f('ix_task_skill_unique'), table_name='task_skill')
    op.drop_table('task_skill')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('task_skill',
    sa.Column('task_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('skill_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['skill_id'], ['skill.id'], name=op.f('task_skill_skill_id_fkey')),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], name=op.f('task_skill_task_id_fkey')),
    sa.PrimaryKeyConstraint('task_id', 'skill_id', name=op.f('task_skill_pkey'))
    )
    op.create_index(op.f('ix_task_skill_unique'), 'task_skill', ['task_id', 'skill_id'], unique=True)
    op.create_table('intern_skill',
    sa.Column('intern_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('skill_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('note', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['intern_id'], ['intern.id'], name=op.f('intern_skill_intern_id_fkey')),
    sa.ForeignKeyConstraint(['skill_id'], ['skill.id'], name=op.f('intern_skill_skill_id_fkey')),
    sa.PrimaryKeyConstraint('intern_id', 'skill_id', name=op.f('intern_skill_pkey'))
    )
    op.create_index(op.f('ix_intern_skill_unique'), 'intern_skill', ['intern_id', 'skill_id'], unique=True)
    op.create_table('supervisor_skill',
    sa.Column('supervisor_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('skill_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('note', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['skill_id'], ['skill.id'], name=op.f('supervisor_skill_skill_id_fkey')),
    sa.ForeignKeyConstraint(['supervisor_id'], ['supervisor.id'], name=op.f('supervisor_skill_supervisor_id_fkey')),
    sa.PrimaryKeyConstraint('supervisor_id', 'skill_id', name=op.f('supervisor_skill_pkey'))
    )
    op.create_index(op.f('ix_supervisor_skill_unique'), 'supervisor_skill', ['supervisor_id', 'skill_id'], unique=True)
    op.drop_index('ix_project_skill_unique', table_name='project_skill')
    op.drop_table('project_skill')
    op.drop_index('ix_project_intern_unique', table_name='project_intern')
    op.drop_table('project_intern')
    op.drop_index('ix_user_skill_unique', table_name='user_skill')
    op.drop_table('user_skill')
    # ### end Alembic commands ###
